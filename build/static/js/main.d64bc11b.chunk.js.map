{"version":3,"sources":["Tmdb.js","components/movie_row/index.js","components/featured_movie/index.js","components/header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadALl","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","height","innerHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d64bc11b.chunk.js","sourcesContent":["const API_KEY = '65bd3462e9537c5bcb3b0087f21d5f68';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n    -Originais netflix\n    -recomendados (trending)\n    -em alta (top rated)\n    -ação\n    -comédia\n    -terror\n    -romance\n    -documentários\n*/\n\nconst basicFetch = async (endpoint) =>{\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n};\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do site pirata do paikkkkkkk',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para Você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items:  await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ];\n    },\n\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if (movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n        return info;\n    }\n}","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nexport default function MovieRow({title, items}) {\n\n    const [scrollX, setScrollX] = useState(0);\n\n    const handleBeforeBtn = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if (x > 0) x = 0;\n        setScrollX(x);\n    }\n\n    const handleNextBtn = () => {   \n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 150;\n        if ((window.innerWidth - listW) > x) {\n            x = (window.innerWidth - listW) - 60\n        }\n        setScrollX(x);\n    }\n\n    return (\n        <div className='movieRow'>\n            <h2>{title}</h2>\n            <div className='movieRow--before-btn' onClick={handleBeforeBtn}>\n                <NavigateBeforeIcon style={{fontSize: 50}} />\n            </div>\n            <div className='movieRow--next-btn' onClick={handleNextBtn}>\n                <NavigateNextIcon style={{fontSize: 50}} />\n            </div>\n            <div className='movieRow--listarea'>\n                <div className='movieRow--list' style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 200\n                    }}>\n                    {items.results.length > 0 && items.results.map((item, key) => (\n                        <div key={key} className='movieRow--item'>\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default function FeaturedMovie({item}) {\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n\n    for (let i in item.genres) {\n        genres.push(item.genres[i].name);\n    }\n\n    let description = item.overview;\n    if (description.length > 200) {\n        description = description.substring(0, 200) + '...';\n    }\n\n    return (\n        <section className='featured' style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path}`,\n        }}>\n            <div className='featured--vertical'>\n                <div className='featured--horizontal'>\n                    <div className='featured--name'>{item.original_name}</div>\n                    <div className='featured--info'>\n                        <div className='featured--points'>{item.vote_average} pontos</div>\n                        <div className='featured--year'>{firstDate.getFullYear()}</div>\n                        <div className='featured--seasons'>{item.number_of_seasons} temporada{item.number_of_seasons !== 1? 's': ''}</div>\n                    </div>\n                    <div className='featured--description'>{description}</div>\n                    <div className='featured--buttons'>\n                        <a href={`/watch/${item.id}`} className='featured--watchbutton'> ► Assistir</a>\n                        <a href={`/list/add/${item.id}`} className='featured--mylistbutton'>+ Minha lista</a>\n                    </div>\n                    <div className='featured--genres'><strong>Gêneros: </strong>{genres.join(', ')}</div>\n                </div>\n            </div>\n        </section>\n    );\n}","import React from 'react';\nimport './Header.css';\n\nexport default function Header({black}) {\n    return(\n        <header className={black ? 'black' : ''}>\n           <div className='header--logo'>\n               <a href='/'>\n                   <img src='https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg' alt='logo Netflix' />\n               </a>\n           </div>\n            <div className='header--user'>\n                <a href='/'>\n                    <img src='https://cdn0.iconfinder.com/data/icons/set-ui-app-android/32/8-512.png' alt='Ícone de usuário'/>\n                </a>\n            </div>\n        </header>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/movie_row';\nimport FeaturedMovie from './components/featured_movie';\nimport Header from './components/header/';\n\nexport default function App() {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  \n  useEffect(() => {\n    const loadALl = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o Featured\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadALl();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      window.scrollY > 20 ? setBlackHeader(true) : setBlackHeader(false);\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && \n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className='lists'>\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        <p>Site desenvolvido no video-aula da B7Web</p>\n        <p>&copy;Direitos de imagem para Netflix </p>\n        <p>Dados pegos do site <a href='https://www.themoviedb.org/'>Themoviedb.org</a></p>\n      </footer>\n\n      {movieList.length <= 0 &&\n        <div className='loading'>\n          <img src='https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif' alt='Carregando' width={window.innerWidth / 2} height={window.innerHeight / 2} />\n        </div>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}